syntax = "proto3";

package vlr.api;
option go_package = "github.com/derarken/vlr-api/proto";

import "vlr/api/api.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service Api {
    rpc GetMatchIds(GetMatchIdsRequest) returns (GetMatchIdsResponse) {
        option (google.api.http) = {
            post: "/v1/matchIds",
            body: "*"
        };
    }
    rpc GetMatch(GetMatchRequest) returns (GetMatchResponse) {
        option (google.api.http) = {
            post: "/v1/match",
            body: "*"
        };
    }
}

// Returns a list of match ids that match the given criteria
// Timestamps in UTC
// If the status is STATUS_LIVE, the *from* and *to* fields are ignored
// If the status is STATUS_UPCOMING and no *from* field is provided, the *from* field is set to the current time, if no *to* field is provided, the *to* field is set to the *from* field +24h
// If the status is STATUS_COMPLETED and no *from* field is provided, the *from* field is is set to the *to* field -24h, if no *to* field is provided, the *to* field is set to the current time
message GetMatchIdsRequest {
    Status status = 1;
    google.protobuf.Timestamp from = 2;
    google.protobuf.Timestamp to = 3;
}

message GetMatchIdsResponse {
    repeated string match_ids = 1;
}

// Returns a match by its id
message GetMatchRequest {
    string match_id = 1;
}

message GetMatchResponse {
    Match match = 1;
}