syntax = "proto3";

package vlr.api;
option go_package = "github.com/derarken/vlr-api/proto";

import "google/protobuf/timestamp.proto";

enum MatchState {
    MATCH_STATE_UNSPECIFIED = 0;
    MATCH_STATE_LIVE = 1;
    MATCH_STATE_UPCOMING = 2;
    MATCH_STATE_COMPLETED = 3;
}

enum EventState {
    EVENT_STATE_UNSPECIFIED = 0;
    EVENT_STATE_ONGOING= 1;
    EVENT_STATE_UPCOMING = 2;
    EVENT_STATE_COMPLETED = 3;
}

enum RosterEntryRole {
    ROSTER_ENTRY_ROLE_UNSPECIFIED = 0;
    ROSTER_ENTRY_ROLE_INACTIVE = 1;
    // player roles
    ROSTER_ENTRY_ROLE_PLAYER = 2;
    ROSTER_ENTRY_ROLE_SUB = 3;
    ROSTER_ENTRY_ROLE_STAND_IN = 4;
    // staff roles
    ROSTER_ENTRY_ROLE_COACH = 7;
    ROSTER_ENTRY_ROLE_HEAD_COACH = 8;
    ROSTER_ENTRY_ROLE_ASSISTANT_COACH = 9;
    ROSTER_ENTRY_ROLE_PERFORMANCE_COACH = 10;
    ROSTER_ENTRY_ROLE_ANALYST = 11;
    ROSTER_ENTRY_ROLE_MANAGER = 12;
}

message Match {
    message Head {
        MatchState state = 1;
        message Event {
            // vlr.gg/event/{event_id}
            string event_id = 1;
            string name = 2;
            string stage = 3;
        }
        string match_id = 2;
        Event event = 3;
        google.protobuf.Timestamp date_time = 4;
    }
    Head head = 1;

    message Versus {
        message Team {
            // vlr.gg/team/{team_id}
            string team_id = 1;
            string name = 2;
        }

        Team team1 = 1;
        // the map score of the first team
        int32 score1 = 2;

        Team team2 = 3;
        // the map score of the second team
        int32 score2 = 4;
    }
    Versus versus = 2;

    message Map {
        string name = 2;
        message Round {
            // the score of the first team
            int32 score1 = 2;
            // the score of the second team
            int32 score2 = 3;
        }
        repeated Round rounds = 3;
    }
    repeated Map maps = 3;
}

message Team {
    message Head {
        // vlr.gg/team/{team_id}
        string team_id = 1;
        string name = 2;
        string tricode = 3;
        string region = 4;
    }
    Head head = 1;

    message Roster {
        message Entry {
            // vlr.gg/player/{player_id}
            string player_id = 1;
            string name = 2;
            string real_name = 3;
            RosterEntryRole role = 4;
        }
        repeated Entry players = 1;
        repeated Entry staff = 2;
    }
    Roster roster = 2;
}