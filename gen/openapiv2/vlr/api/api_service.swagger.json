{
  "swagger": "2.0",
  "info": {
    "title": "vlr/api/api_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Api"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/match": {
      "post": {
        "operationId": "Api_GetMatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiGetMatchRequest"
            }
          }
        ],
        "tags": [
          "Api"
        ]
      }
    },
    "/v1/matchIds": {
      "post": {
        "operationId": "Api_GetMatchIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMatchIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "You can further limit the results by filling one or more optional *options* fields.\n- If an event id is provided, *from* and *to* are ignored´\n\nTimestamps are in UTC\n\nIf the state is MATCH_STATE_LIVE, the *from* and *to* fields are ignored\nIf the state is MATCH_STATE_UPCOMING and no *from* field is provided, the *from* field is set to the current time, if no *to* field is provided, the *to* field is set to the *from* field +24h\nIf the state is MATCH_STATE_COMPLETED and no *from* field is provided, the *from* field is is set to the *to* field -24h, if no *to* field is provided, the *to* field is set to the current time",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiGetMatchIdsRequest"
            }
          }
        ],
        "tags": [
          "Api"
        ]
      }
    }
  },
  "definitions": {
    "GetMatchIdsRequestOptions": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        }
      }
    },
    "HeadEvent": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string",
          "title": "vlr.gg/event/{event_id}"
        },
        "name": {
          "type": "string"
        },
        "stage": {
          "type": "string"
        }
      }
    },
    "MapRound": {
      "type": "object",
      "properties": {
        "score1": {
          "type": "integer",
          "format": "int32",
          "title": "the score of the first team"
        },
        "score2": {
          "type": "integer",
          "format": "int32",
          "title": "the score of the second team"
        }
      }
    },
    "MatchHead": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/apiMatchState"
        },
        "matchId": {
          "type": "string"
        },
        "event": {
          "$ref": "#/definitions/HeadEvent"
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MatchMap": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rounds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MapRound"
          }
        }
      }
    },
    "MatchVersus": {
      "type": "object",
      "properties": {
        "team1": {
          "$ref": "#/definitions/VersusTeam"
        },
        "score1": {
          "type": "integer",
          "format": "int32",
          "title": "the map score of the first team"
        },
        "team2": {
          "$ref": "#/definitions/VersusTeam"
        },
        "score2": {
          "type": "integer",
          "format": "int32",
          "title": "the map score of the second team"
        }
      }
    },
    "VersusTeam": {
      "type": "object",
      "properties": {
        "teamId": {
          "type": "string",
          "title": "vlr.gg/team/{team_id}"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "apiGetMatchIdsRequest": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/apiMatchState"
        },
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        },
        "options": {
          "$ref": "#/definitions/GetMatchIdsRequestOptions"
        }
      },
      "description": "You can further limit the results by filling one or more optional *options* fields.\n- If an event id is provided, *from* and *to* are ignored´\n\nTimestamps are in UTC\n\nIf the state is MATCH_STATE_LIVE, the *from* and *to* fields are ignored\nIf the state is MATCH_STATE_UPCOMING and no *from* field is provided, the *from* field is set to the current time, if no *to* field is provided, the *to* field is set to the *from* field +24h\nIf the state is MATCH_STATE_COMPLETED and no *from* field is provided, the *from* field is is set to the *to* field -24h, if no *to* field is provided, the *to* field is set to the current time",
      "title": "* \nReturns a list of match ids that match the given criteria"
    },
    "apiGetMatchIdsResponse": {
      "type": "object",
      "properties": {
        "matchIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiGetMatchRequest": {
      "type": "object",
      "properties": {
        "matchId": {
          "type": "string"
        }
      },
      "title": "Returns a match by its id"
    },
    "apiGetMatchResponse": {
      "type": "object",
      "properties": {
        "match": {
          "$ref": "#/definitions/apiMatch"
        }
      }
    },
    "apiMatch": {
      "type": "object",
      "properties": {
        "head": {
          "$ref": "#/definitions/MatchHead"
        },
        "versus": {
          "$ref": "#/definitions/MatchVersus"
        },
        "maps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MatchMap"
          }
        }
      }
    },
    "apiMatchState": {
      "type": "string",
      "enum": [
        "MATCH_STATE_UNSPECIFIED",
        "MATCH_STATE_LIVE",
        "MATCH_STATE_UPCOMING",
        "MATCH_STATE_COMPLETED"
      ],
      "default": "MATCH_STATE_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
